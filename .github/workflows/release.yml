name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and release ARM templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Extract major version from version
        id: get_major_version
        run: |
          MAJOR_VERSION=$(echo ${{ env.VERSION }} | sed -E 's/v([0-9]+)\..*/\1/')
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV

      - name: Bake version in templates
        id: template_versioning
        run: |
          sed -i "s/var templateVersion = '0.0.0'/var templateVersion = '${{ env.VERSION }}'/" deployment/templates/main.bicep
          sed -i "s/var templateVersion = '0.0.0'/var templateVersion = '${{ env.VERSION }}'/" deployment/managed/templates/main.bicep
          sed -i "s/var templateVersion = '0.0.0'/var templateVersion = '${{ env.VERSION }}'/" deployment/templates/linked/vmCreation.bicep
          sed -i "s/var templateVersion = '0.0.0'/var templateVersion = '${{ env.VERSION }}'/" deployment/managed/templates/linked/vmCreation.bicep

      - name: Bake version in infrastructure installation script
        id: template_versioning_infrastructure_installation
        run: |
          sed -i "s/var version = '0.0.0'/var version = '${{ env.VERSION }}'/" deployment/infrastructure/infrastructureInstallation.bicep

      - name: Link vmCreationTemplateUri in main templates
        id: vmcreationuri_link
        run: |
          sed -i "s|\[\[param:vmCreationTemplateUri\]\]|https://github.com/schoolyear/avd-deployments/releases/download/${{ env.VERSION }}/vmCreation.json|" deployment/templates/main.bicep
          sed -i "s|\[\[param:vmCreationTemplateUri\]\]|https://github.com/schoolyear/avd-deployments/releases/download/${{ env.VERSION }}/managed-vmCreation.json|" deployment/managed/templates/main.bicep

      - name: Link autoUpdateScript in vm deployment template
        id: autoupdatescript_link
        run: |
          sed -i "s|var autoUpdateScriptLocation = ''|var autoUpdateScriptLocation = 'https://github.com/schoolyear/avd-deployments/releases/download/${{ env.VERSION }}/autoUpdateVdiBrowser.ps1'|" deployment/templates/linked/vmCreation.bicep

      - name: Link sessionhostSetup script in vm deployment template (managed only)
        id: sessionhostSetup_link
        run: |
          sed -i "s|var sessionhostSetupScriptLocation = ''|var sessionhostSetupScriptLocation = 'https://github.com/schoolyear/avd-deployments/releases/download/${{ env.VERSION }}/sessionhostSetup.ps1'|" deployment/managed/templates/linked/vmCreation.bicep

      - name: Output directory
        run: mkdir -p out

      - name: Copy autoUpdateVdiBrowser.ps1 to output directory
        run: cp deployment/templates/autoUpdateVdiBrowser.ps1 out/

      - name: Copy uiFormDefinition.json to output directory
        run: cp deployment/infrastructure/uiFormDefinition.json out/

      - name: Copy sessionhostSetup.ps1 to output directory
        run: cp deployment/managed/resources/sessionhostSetup.ps1 out/

      - name: Build main deployment template
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: deployment/templates/main.bicep
          outputFilePath: out/main.json

      - name: Build managed main deployment template
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: deployment/managed/templates/main.bicep
          outputFilePath: out/managed-main.json

      - name: Build vmCreation
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: deployment/templates/linked/vmCreation.bicep
          outputFilePath: out/vmCreation.json

      - name: Build managed vmCreation
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: deployment/managed/templates/linked/vmCreation.bicep
          outputFilePath: out/managed-vmCreation.json

      - name: Build infrastructure installation
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: deployment/infrastructure/infrastructureInstallation.bicep
          outputFilePath: out/v${{ env.MAJOR_VERSION }}-infrastructure-installation.json

      - name: Create GitHub Release for v0 and v1
        if: env.MAJOR_VERSION == '0' || env.MAJOR_VERSION == '1'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/main.json
            out/vmCreation.json
            out/autoUpdateVdiBrowser.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release for v2+
        if: env.MAJOR_VERSION != '0' && env.MAJOR_VERSION != '1'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/main.json
            out/vmCreation.json
            out/autoUpdateVdiBrowser.ps1
            out/v${{ env.MAJOR_VERSION }}-infrastructure-installation.json
            out/managed-main.json
            out/managed-vmCreation.json
            out/uiFormDefinition.json
            out/sessionhostSetup.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
